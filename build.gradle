plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
}

//--------------------------------allure for JUNIT
allure {
    report {
        version.set("2.17.3")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.17.3")
            }
        }
    }
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:5.3.1",
            "io.qameta.allure:allure-rest-assured:2.17.3",
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter:5.8.2"
            )
}

tasks.withType(Test) {
    useJUnitPlatform()//use junit for task

    systemProperties(System.getProperties()) //получить проперти (с командной строки)
//--------------------------------------------------------------------------------------->For parallel tests
    if (System.getProperty("threads") != null && System.getProperty("threads") != 0) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

//--------------------------------------------------------------------------------------->Short logging for tests
    testLogging {
        lifecycle {
            events "STARTED", "FAILED", "PASSED", "SKIPPED"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}